<?php

include_once('commons_event.features.inc');

/**
 * Implementation of hook_views_pre_view()
 */
function commons_event_views_pre_view(&$view, &$display_id, &$args) {
  switch ($view->name) {
    case 'content_global_calendar':
      $view->display_handler->override_option('header', commons_core_node_add_link('event'));
      break;
      
    case 'group_block_events_upcoming':
      if ($group = commons_core_get_group_context()) {
        $view->display_handler->override_option('footer', l(t('View events on calendar'), "node/{$group->nid}/content/calendar"));
      }
      break;
      
    case 'upcoming_events':
      if ($view->current_display == 'block_1') {
        $view->display_handler->override_option('footer', l(t('View events on calendar'), 'content/calendar'));
      }
      break;
  }
}

/**
 * Implementation of hook_og_features_registry()
 */
function commons_event_og_features_registry() {
  $registry = array();
  
  // Feature: commons_event
  $feature = new stdClass;
  $feature->id = 'commons_event';
  $feature->name = t('Events');
  $feature->description = t('Create events and display them on calendars');
  $feature->components = array(
    'views' => array(
      'group_tab_event_calendar',
    ),
    'node' => array(
      'event',
    ),
    'context' => array(
      'context_ui-group-group-home-events',
    ),
  );
  $registry[$feature->id] = $feature;
  
  return $registry;
}

